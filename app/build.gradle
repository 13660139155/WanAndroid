apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'bugly'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion

    bugly {
        appId = 'a0768ddf34' // 注册时分配的App ID
        appKey = '9d2b9c08-11b7-45d2-b4b4-89753d6df453' // 注册时分配的App Key
        debug = true // 打开debug模式可以观察到日志
        execute = isRelease //插件开关
    }

    defaultConfig {
        applicationId "com.example.hy.wanandroid"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86' // 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        config {
            storeFile file(KEYPATH)
            storePassword KEYPASS
            keyAlias ALIASNAME
            keyPassword ALIASPASS
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "WanAndroid-release.apk"
                }
            }
        }

        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //为项目指定资源目录
    sourceSets {
        main {
            res.srcDirs = ['src/main/res']
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    dexOptions {
        dexInProcess true
        preDexLibraries true
        //jumboMode true
        //javaMaxHeapSize 4g
        //incremental true
    }

    aaptOptions {
        cruncherEnabled false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':commonlib')
    implementation project(':loading')

    //android support
    implementation rootProject.ext.supportDependency

    //db,gilde
    implementation rootProject.ext.commonDependency

    //network
    implementation rootProject.ext.networkDependency

    //rxjava2
    implementation rootProject.ext.rejava2Dependency

    //ui
    implementation rootProject.ext.uiDependency

    //inject
    implementation rootProject.ext.injectDependency

    //other
    annotationProcessor rootProject.ext.otherDependency

    //bugly
    //noinspection GradleDependency
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //noinspection GradleDependency
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    //leak test
    debugImplementation rootProject.ext.test["leakCanaryDebug"]
    releaseImplementation rootProject.ext.test["leakCanaryRelease"]
    debugImplementation rootProject.ext.test["leakCanaryDebugSupport"]

    //unit test
    testImplementation rootProject.ext.test["junit"]
    androidTestImplementation rootProject.ext.test["runner"]
    androidTestImplementation rootProject.ext.test["espresso"]
    testImplementation rootProject.ext.test["mocktio"]
}
