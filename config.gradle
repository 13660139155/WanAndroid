ext {

    android = [
            compileSdkVersion       : 28,
            buildToolsVersion       : "28.0.0",
            minSdkVersion           : 15,
            targetSdkVersion        : 28,
            versionCode             : 6,
            versionName             : "v1.4",
    ]

    version = [

            //support
            LibraryCompatVersion   : "1.1.0-alpha02",
            ConstraintLayoutVersion: "1.1.3",
            MarterialDesignVersion : "1.0.0",

            //db
            LitepalVersion         : "3.0.0",

            //network
            RetrofitVersion        : "2.4.0",

            //rxJava2
            Rxjava2Version : "2.2.2",
            RxAndroidVersion : "2.1.0",
            RxRelayVersion : "2.1.0",

            //dagger2
            Dagger2Version           : "2.18",
            BufferKinfeVersion          : "10.0.0",

            //leakcanary
            LeakCanaryVersion : "1.6.2",

            //ui
            BaseAdapterVersion     : "2.9.43-alpha1",
            SmartrefreshVersion    : "1.1.0-alpha-14",
            AgentWebVersion         : "4.0.2",
            Gilde                   : "4.8.0",
            FlowLayout              : "1.1.2",
            BannerVersion : '1.4.10',
            CircleImageVersion : '2.2.0',
            VerticalTabLayoutVersion : '1.2.5',
            YViewPagerDemoVersion : '0.4',
            WaveLoadingVersion : '0.3.5',
            TwinklingRefreshLayoutVersion : '1.0.7',
            MultiWaveHeaderVersion : '1.0.0-alpha-1',
            ImageCropperVersion : '2.8.0',

            //test
            JunitVersion           : "4.12",
            RunnerVersion          : "1.1.0",
            EspressoVersion        : "3.1.0",
            MocktioVersion : "2.8.9"

    ]

    support = [
            "libraryCompat"         : "androidx.appcompat:appcompat:${version.LibraryCompatVersion}",
            "constraintLayout"      : "androidx.constraintlayout:constraintlayout:${version.ConstraintLayoutVersion}",
            "marterialDesign"       : "com.google.android.material:material:${version.MarterialDesignVersion}",
    ]

    common = [
            //litepal
            "litepal"               : "org.litepal.android:java:${version.LitepalVersion}",
            //gilde
            "gilde" : "com.github.bumptech.glide:glide:${version.Gilde}",
    ]

    other = [
            "gildeCpmplier" : "com.github.bumptech.glide:compiler:${version.Gilde}",
            "dagger2Cpmplier" : "com.google.dagger:dagger-compiler:${version.Dagger2Version}",
            "bufferKinfeCompiler" : "com.jakewharton:butterknife-compiler:${version.BufferKinfeVersion}",
    ]

    network = [
            "retrofit"              : "com.squareup.retrofit2:retrofit:${version.RetrofitVersion}",
            "retrofitGsonConvert"   : "com.squareup.retrofit2:converter-gson:${version.RetrofitVersion}",
            "retrofitRxjava2Adapter": "com.squareup.retrofit2:adapter-rxjava2:${version.RetrofitVersion}",
    ]

    rxjava2 = [
            "rxJava2" : "io.reactivex.rxjava2:rxjava:${version.Rxjava2Version}",
            "rxAndroid" : "io.reactivex.rxjava2:rxandroid:${version.RxAndroidVersion}",
            "rxRelay" : "com.jakewharton.rxrelay2:rxrelay:${version.RxRelayVersion}",
    ]

    inject = [
            //dagger2
            "dagger2" : "com.google.dagger:dagger:${version.Dagger2Version}",
            //bufferKinfe
            "bufferKinfe" : "com.jakewharton:butterknife:${version.BufferKinfeVersion}",
    ]

    ui = [
            "baseAdapter"           : "com.github.CymChad:BaseRecyclerViewAdapterHelper:${version.BaseAdapterVersion}",
            "smartrefresh"          : "com.scwang.smartrefresh:SmartRefreshLayout:${version.SmartrefreshVersion}",
            "smartrefreshHeader" : "com.scwang.smartrefresh:SmartRefreshHeader:${version.SmartrefreshVersion}",
            "agentWeb" : "com.just.agentweb:agentweb:${version.AgentWebVersion}",
            "flowLayout" : "com.hyman:flowlayout-lib:${version.FlowLayout}",
            "banner" : "com.youth.banner:banner:${version.BannerVersion}",
            "circleImage" : "de.hdodenhof:circleimageview:${version.CircleImageVersion}",
            "verticalTablayout" : "q.rorbin:VerticalTabLayout:${version.VerticalTabLayoutVersion}",
            "waveLoading" : "me.itangqi.waveloadingview:library:${version.WaveLoadingVersion}",
            "twinklingRefreshLayout" : "com.lcodecorex:tkrefreshlayout:${version.TwinklingRefreshLayoutVersion}",
            "multiWaveHeader" : "com.scwang.wave:MultiWaveHeader:${version.MultiWaveHeaderVersion}",
            "imageCropper": "com.theartofdev.edmodo:android-image-cropper:${version.ImageCropperVersion}",
    ]

    test = [
            //leak test
            leakCanaryDebug : "com.squareup.leakcanary:leakcanary-android:${version.LeakCanaryVersion}",
            leakCanaryRelease : "com.squareup.leakcanary:leakcanary-android-no-op:${version.LeakCanaryVersion}",
            leakCanaryDebugSupport : "com.squareup.leakcanary:leakcanary-support-fragment:${version.LeakCanaryVersion}",

            //unit test
            "junit"                 : "junit:junit:${version.JunitVersion}",
            "runner"                : "androidx.test:runner:${version.RunnerVersion}",
            "espresso"              : "androidx.test.espresso:espresso-core:${version.EspressoVersion}",
            "mocktio"               : "org.mockito:mockito-core:${version.MocktioVersion}"
    ]

    supportDependency = support.values()
    commonDependency = common.values()
    otherDependency = other.values()
    networkDependency = network.values()
    rejava2Dependency = rxjava2.values()
    injectDependency = inject.values()
    uiDependency = ui.values()
    textDependency = test.values()

    isRelease = checkRelease()

}

// 通过task判断是否为release，比判断Variant好
def checkRelease() {
    def runTasks = gradle.startParameter.taskNames
    for (String task : runTasks) {
        // 我这里根据task为"assemble"和非"Debug"认定为release
        if (task.contains("assemble") && !task.contains("Debug")) {
            return true
        }
    }
    return false
}